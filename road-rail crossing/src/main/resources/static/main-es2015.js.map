{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/new-road-rail-crossing/new-road-rail-crossing.component.ts","./src/app/new-road-rail-crossing/new-road-rail-crossing.component.html","./src/app/risk/risk.component.ts","./src/app/risk/risk.component.html","./src/app/services/risk-service.ts","./src/app/services/road-rail-crossing-service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACgD;AACnD;;;AAGpD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,qHAA4B,EAAC;IACzE,EAAC,IAAI,EAAE,MAAM,EAAC,SAAS,EAAC,kEAAa,EAAC;CACvC,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,uBAAuB,CAAC;KACjC;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEACI;QAAA,4EAAiC;QACjC,2EAA+B;QAC/B,wEAAyB;QAC7B,4DAAM;;6FDGO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACQ;AACiB;AACiC;AAC7C;AACI;AACE;AACa;AACxB;AACD;AACD;;AAwB9C,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAXJ;YACP,uEAAa;YACb,oEAAgB;YAChB,oEAAS;YACT,0DAAW;YACX,kEAAmB;YACnB,qEAAgB;YAChB,6FAAuB;YACvB,uEAAc;YACd,qEAAa;SACd;mIAIU,SAAS,mBApBlB,2DAAY;QACZ,oFAAmB;QACnB,qHAA4B;QAC5B,wEAAe;QACf,mEAAa,aAGb,uEAAa;QACb,oEAAgB;QAChB,oEAAS;QACT,0DAAW;QACX,kEAAmB;QACnB,qEAAgB;QAChB,6FAAuB;QACvB,uEAAc;QACd,qEAAa;6FAKJ,SAAS;cAtBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,oFAAmB;oBACnB,qHAA4B;oBAC5B,wEAAe;oBACf,mEAAa;iBACd;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,oEAAS;oBACT,0DAAW;oBACX,kEAAmB;oBACnB,qEAAgB;oBAChB,6FAAuB;oBACvB,uEAAc;oBACd,qEAAa;iBACd;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACrCD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEAAG;QAAA,oEAAG;QAAA,uHAA4D;QAAA,4DAAI;QAAA,4DAAI;QAC9E,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,uEAAiE;QAAA,mEAA6C;QAAC,4DAAI;QACnH,wEAA4C;QAAA,mEAA2C;QAAA,4DAAI;QAC/F,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAS;;6FDPI,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE;;;;;;ICwBtE,qEACM;;ADlBC,MAAM,mBAAmB;IAI9B,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,QAAQ;IACR,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,IAAI;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,YAAY;QACR,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACpC,CAAC;;sFAtBU,mBAAmB;mGAAnB,mBAAmB;QCPhC,qEACA;QAAA,yEAEI;QAAA,uEACI;QAAA,qEAAI;QAAA,uEAA6B;QAAA,kEAAqC;QAAA,4DAAI;QAAA,+HAA0D;QAAA,4DAAK;QAC7I,4DAAI;QACJ,4EACI;QAAA,qEAAyC;QAC7C,4DAAS;QAET,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEAAqC;QAAjB,uIAAS,UAAM,IAAC;QAAC,qEAAG;QAAA,iFAAgB;QAAA,4DAAI;QAAA,4DAAI;QACpE,4DAAK;QACL,yEACI;QAAA,yEAAiD;QAA7B,uIAAS,sBAAkB,IAAC;QAAC,qEAAG;QAAA,yFAAwB;QAAA,4DAAI;QAAA,4DAAI;QACxF,4DAAK;QACL,yEACI;QAAA,yEAA6C;QAAzB,uIAAS,kBAAc,IAAC;QAAC,qEAAG;QAAA,sEAAU;QAAA,4DAAI;QAAC,8DAAC;QAAA,yEAAuB;QAAA,iEAAK;QAAA,4DAAI;QAAA,6DAAC;QAAA,yEAAwB;QAAA,sEAAU;QAAA,4DAAI;QAAA,6DAAC;QAAA,4DAAI;QAChJ,4DAAK;QACT,4DAAK;QACT,4DAAM;QACV,4DAAM;QACN,kHACA;;QADmB,2DAAc;QAAd,4EAAc;;6FDjBpB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEsB;;;;;;ICWpD,4EAAiD;IAAA,2GAA2C;IAAA,4DAAQ;;;IAMpG,4EAAqD;IAAA,2GAA2C;IAAA,4DAAQ;;;IAMxG,4EAAqD;IAAA,wJAAmF;IAAA,4DAAQ;;;IAMhJ,4EAAwD;IAAA,2GAAsC;IAAA,4DAAQ;;;IAYtG,4EAA0D;IAAA,4IAA4E;IAAA,4DAAQ;;;IAM9I,4EAAwD;IAAA,yJAA+E;IAAA,4DAAQ;;;IAM/I,4EAAkE;IAAA,yHAAyD;IAAA,4DAAQ;;;IAMnI,4EAA4E;IAAA,6IAAwE;IAAA,4DAAQ;;;IAM5J,4EAAoE;IAAA,uJAAwF;IAAA,4DAAQ;;;IAMpK,4EAAgE;IAAA,2HAAsD;IAAA,4DAAQ;;;IAM9H,4EAA0E;IAAA,0JAA2E;IAAA,4DAAQ;;;IAM7J,4EAAkE;IAAA,oKAA2F;IAAA,4DAAQ;;;IAOrK,4EAAqE;IAAA,yIAAyE;IAAA,4DAAQ;;;IAMtJ,4EAAmE;IAAA,iJAAiF;IAAA,4DAAQ;;ADtFzK,MAAM,4BAA4B;IAIvC,YAAoB,WAAwB,EAAU,OAAgC;QAAlE,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAyB;IAAI,CAAC;IAE3F,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,aAAa,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACrC,WAAW,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnC,qBAAqB,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC7C,+BAA+B,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACvD,uBAAuB,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/C,mBAAmB,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3C,6BAA6B,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACrD,qBAAqB,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC7C,wBAAwB,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAChD,sBAAsB,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAC/C,CAAC,CAAC;IACL,CAAC;IAED,yBAAyB,CAAC,IAAe;QACvC,IAAG,IAAI,CAAC,KAAK,EAAC;YACZ,IAAI,mBAAmB,GAAG;gBACxB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;gBACrB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;gBAC7B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;gBAC7B,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;gBACnC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa;gBACvC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;gBACnC,qBAAqB,EAAE,IAAI,CAAC,KAAK,CAAC,qBAAqB;gBACvD,+BAA+B,EAAE,IAAI,CAAC,KAAK,CAAC,+BAA+B;gBAC3E,uBAAuB,EAAE,IAAI,CAAC,KAAK,CAAC,uBAAuB;gBAC3D,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,mBAAmB;gBACnD,6BAA6B,EAAE,IAAI,CAAC,KAAK,CAAC,6BAA6B;gBACvE,qBAAqB,EAAE,IAAI,CAAC,KAAK,CAAC,qBAAqB;gBACvD,wBAAwB,EAAE,IAAI,CAAC,KAAK,CAAC,wBAAwB;gBAC7D,sBAAsB,EAAE,IAAI,CAAC,KAAK,CAAC,sBAAsB;aAC1D,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,SAAS,EAAE,CAAC;SACpD;IACH,CAAC;IAED,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;wGA/C9B,4BAA4B;4GAA5B,4BAA4B;QCZzC,yEACI;QAAA,yEACI;QAAA,oEAA4B;QAC5B,yEACI;QAAA,0EACI;QADyB,wJAAY,0CAAkC,IAAC;QACxE,sEACI;QAAA,qEAAI;QAAA,oEAAG;QAAA,oFAAoB;QAAA,4DAAI;QAC3B,kEAA0B;QAAA,4DAAK;QACvC,4DAAM;QACN,iEACA;QAAA,0EACI;QAAA,yEAAO;QAAA,iGAAgC;QAAA,4DAAQ;QAC/C,0EAA0E;QAC1E,8HAAiD;QACrD,4DAAM;QACN,iEACA;QAAA,0EACI;QAAA,yEAAO;QAAA,oJAA8E;QAAA,4DAAQ;QAC7F,0EAAqE;QACrE,8HAAqD;QACzD,4DAAM;QACN,iEACA;QAAA,0EACI;QAAA,yEAAO;QAAA,8IAAwE;QAAA,4DAAQ;QACvF,2EAAqE;QACrE,8HAAqD;QACzD,4DAAM;QACN,iEACA;QAAA,0EACI;QAAA,yEAAO;QAAA,+VAAuO;QAAA,qEAAG;QAAA,yGAAmC;QAAA,4DAAI;QAAA,8DAAE;QAAA,4DAAQ;QAClS,2EAAyE;QACzE,8HAAwD;QAC5D,4DAAM;QACN,iEACA;QAAA,iEACA;QAAA,uEACI;QAAA,sEAAI;QAAA,qEAAG;QAAA,oFAAmB;QAAA,4DAAI;QAC1B,oEAAsC;QAAA,4DAAK;QACnD,4DAAM;QACN,iEACA;QAAA,0EACI;QAAA,yEAAO;QAAA,0IAAyE;QAAA,qEAAG;QAAA,qEAAG;QAAA,mEAAE;QAAA,4DAAI;QAAA,4DAAI;QAAA,6DAAC;QAAA,4DAAQ;QACzG,wEACA;QAAA,8HAA0D;QAC9D,4DAAM;QAEN,0EACI;QAAA,yEAAO;QAAA,8IAAmE;QAAA,qEAAG;QAAA,qEAAG;QAAA,mEAAE;QAAA,4DAAI;QAAA,4DAAI;QAAA,6DAAC;QAAA,4DAAQ;QACnG,wEACA;QAAA,8HAAwD;QAC5D,4DAAM;QAEN,0EACI;QAAA,yEAAO;QAAA,gGAA+B;QAAA,qEAAG;QAAA,qEAAG;QAAA,8DAAE;QAAA,4DAAI;QAAA,4DAAI;QAAC,8DAAC;QAAA,qEAAG;QAAA,6DAAC;QAAA,4DAAI;QAAA,8DAAE;QAAA,4DAAQ;QAC1E,wEACA;QAAA,8HAAkE;QACtE,4DAAM;QAEN,0EACI;QAAA,yEAAO;QAAA,iLAA4F;QAAA,qEAAG;QAAA,qEAAG;QAAA,8DAAE;QAAA,4DAAI;QAAA,4DAAI;QAAC,8DAAC;QAAA,qEAAG;QAAA,6DAAC;QAAA,4DAAI;QAAA,8DAAE;QAAA,4DAAQ;QACvI,wEACA;QAAA,8HAA4E;QAChF,4DAAM;QAEN,0EACI;QAAA,yEAAO;QAAA,2EAAe;QAAA,qEAAG;QAAA,qEAAG;QAAA,8DAAE;QAAA,4DAAI;QAAA,4DAAI;QAAC,8DAAC;QAAA,qEAAG;QAAA,gEAAI;QAAA,4DAAI;QAAA,iHAAiD;QAAA,qEAAG;QAAA,qEAAG;QAAA,iEAAK;QAAA,4DAAI;QAAA,4DAAI;QAAA,8DAAC;QAAA,4DAAQ;QAChI,yEACA;QAAA,gIAAoE;QACxE,4DAAM;QAEN,2EACI;QAAA,0EAAO;QAAA,sJAAqE;QAAA,sEAAG;QAAA,sEAAG;QAAA,+DAAE;QAAA,4DAAI;QAAA,4DAAI;QAAC,+DAAC;QAAA,sEAAG;QAAA,8DAAC;QAAA,4DAAI;QAAA,+DAAE;QAAA,4DAAQ;QAChH,yEACA;QAAA,gIAAgE;QACpE,4DAAM;QAEN,2EACI;QAAA,0EAAO;QAAA,0LAA+F;QAAA,sEAAG;QAAA,sEAAG;QAAA,+DAAE;QAAA,4DAAI;QAAA,4DAAI;QAAC,+DAAC;QAAA,sEAAG;QAAA,8DAAC;QAAA,4DAAI;QAAA,+DAAE;QAAA,4DAAQ;QAC1I,yEACA;QAAA,gIAA0E;QAC9E,4DAAM;QAEN,2EACI;QAAA,0EAAO;QAAA,4EAAe;QAAA,sEAAG;QAAA,sEAAG;QAAA,+DAAE;QAAA,4DAAI;QAAA,4DAAI;QAAC,+DAAC;QAAA,sEAAG;QAAA,iEAAI;QAAA,4DAAI;QAAA,+HAAoD;QAAA,sEAAG;QAAA,sEAAG;QAAA,kEAAK;QAAA,4DAAI;QAAA,4DAAI;QAAA,8DAAC;QAAA,4DAAQ;QACnI,yEACA;QAAA,gIAAkE;QACtE,4DAAM;QACN,kEAEA;QAAA,2EACI;QAAA,0EAAO;QAAA,kHAAgD;QAAA,sEAAG;QAAA,8DAAC;QAAA,4DAAI;QAAA,+DAAE;QAAA,4DAAQ;QACzE,yEACA;QAAA,gIAAqE;QACzE,4DAAM;QAEN,2EACI;QAAA,0EAAO;QAAA,0HAAwD;QAAA,sEAAG;QAAA,sEAAG;QAAA,kEAAK;QAAA,4DAAI;QAAA,4DAAI;QAAA,+DAAE;QAAA,4DAAQ;QAC5F,yEACA;QAAA,gIAAmE;QACvE,4DAAM;QAGN,kEAGA;QAAA,2EACI;QAAA,yEACJ;QAAA,4DAAM;QAEV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,kEACA;QAAA,kEACA;QAAA,kEACA;;QAhHkB,0DAAqB;QAArB,kFAAqB;QASZ,2DAAqB;QAArB,mFAAqB;QAMrB,0DAAyB;QAAzB,uFAAyB;QAMzB,0DAAyB;QAAzB,uFAAyB;QAMzB,0DAA4B;QAA5B,0FAA4B;QAY5B,2DAA8B;QAA9B,4FAA8B;QAM9B,0DAA4B;QAA5B,0FAA4B;QAM5B,2DAAsC;QAAtC,oGAAsC;QAMtC,2DAAgD;QAAhD,8GAAgD;QAMhD,2DAAwC;QAAxC,sGAAwC;QAMxC,2DAAoC;QAApC,kGAAoC;QAMpC,2DAA8C;QAA9C,4GAA8C;QAM9C,2DAAsC;QAAtC,oGAAsC;QAOtC,0DAAyC;QAAzC,uGAAyC;QAMzC,0DAAuC;QAAvC,qGAAuC;;6FDtFrD,4BAA4B;cALxC,uDAAS;eAAC;gBACT,QAAQ,EAAE,4BAA4B;gBACtC,WAAW,EAAE,yCAAyC;gBACtD,SAAS,EAAE,CAAC,wCAAwC,CAAC;aACtD;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AAGN;AAEM;;;;;;;ICHnD,yEAAsC;IAAA,qFAAqB;IAAA,4DAAK;;;IAChE,yEAAoC;IAAA,uDAAa;IAAA,4DAAK;;;IAAlB,0DAAa;IAAb,8EAAa;;;IAIjD,yEAAuC;IAAA,2GAAsC;IAAA,4DAAK;;;IAClF,yEAAoC;IAAA,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,qFAAoB;;;IAIxD,yEAAsC;IAAA,qEAAU;IAAA,4DAAK;;;IACrD,yEAAoC;IAAA,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,qFAAoB;;;IAIxD,yEAAyF;IAAA,gEAAK;IAAA,4DAAK;;;IACnG,yEAAuE;IAAA,uDAAa;IAAA,4DAAK;;;IAAlB,0DAAa;IAAb,8EAAa;;;IAGxF,oEAA4D;;;IAC5D,oEAAkE;;ADV/D,MAAM,aAAa;IAKxB,YAAoB,WAAwB,EAAU,cAA6B;QAA/D,gBAAW,GAAX,WAAW,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAe;QAJnF,qBAAgB,GAAa,CAAC,MAAM,EAAE,aAAa,EAAC,aAAa,EAAC,MAAM,CAAC,CAAC;IAIa,CAAC;IAExF,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IAErB,CAAC;IAEO,WAAW;QACjB,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CACvC,IAAI,GAAE;YACJ,IAAI,CAAC,WAAW,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;YAChD,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACpC,CAAC,CAEJ,CAAC;IACJ,CAAC;IAED,kBAAkB,CAAC,SAAe;QAChC,IAAI,SAAS,CAAC,SAAS,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,SAAS,CAAC,SAAS,QAAQ,CAAC,CAAC;SACrE;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;SACjD;IACH,CAAC;;0EA5BU,aAAa;6FAAb,aAAa;kEAGb,8DAAO;;;;;QCfpB,2EACI;QAAA,2EACI;QAAA,uGAAsC;QACtC,uGAAoC;QACxC,qEAAe;QAEf,2EACI;QAAA,uGAAuC;QACvC,uGAAoC;QACxC,qEAAe;QAEf,2EACI;QAAA,uGAAsC;QACtC,uGAAoC;QACxC,qEAAe;QAEf,4EACI;QAAA,yGAAyF;QACzF,yGAAuE;QAC3E,qEAAe;QAEf,yGAAuD;QACvD,0GAA6D;QACjE,4DAAQ;QACR,iEACA;QAAA,iEACA;QAAA,iEACA;;QA3BiB,uFAA0B;QAqBpB,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;;6FDVnD,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;kBAIE,uDAAS;mBAAC,8DAAO;;;;;;;;;;;;;;AEfpB;AAAA;AAAA;AAAA;AAAA;AAAyC;AAIkB;;;AAE3D,MAAM,GAAG,GAAG,qEAAW,CAAC,IAAI,CAAC;AAMtB,MAAM,WAAW;IACpB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAEpC,CAAC;IAEM,cAAc;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,GAAG,MAAM,CAAC,CAAC;IAC/C,CAAC;;sEAPQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAHR,MAAM;6FAGT,WAAW;cAJvB,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAyC;AAGkB;;;AAE3D,MAAM,GAAG,GAAG,qEAAW,CAAC,kBAAkB,CAAC;AAMpC,MAAM,uBAAuB;IAGhC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAEpC,CAAC;IAEM,IAAI,CAAC,gBAAkC;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,EAAC,gBAAgB,CAAC,CAAC;IAC1D,CAAC;;8FATQ,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAHpB,MAAM;6FAGT,uBAAuB;cAJnC,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACTD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,IAAI,EAAG,gCAAgC;IACvC,kBAAkB,EAAG,8CAA8C;CACpE,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {NewRoadRailCrossingComponent} from \"./new-road-rail-crossing/new-road-rail-crossing.component\";\nimport {RiskComponent} from \"./risk/risk.component\";\n\n\nconst routes: Routes = [\n  {path: 'new-road-rail-crossing', component: NewRoadRailCrossingComponent},\n  {path: 'risk',component:RiskComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'road-rail-crossing-ng';\n}\n","<div class=\"container-fluid\">\n    <app-navigation></app-navigation>\n    <router-outlet></router-outlet>\n    <app-footer></app-footer>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { NewRoadRailCrossingComponent } from './new-road-rail-crossing/new-road-rail-crossing.component';\nimport { FooterComponent } from './footer/footer.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatTableModule} from \"@angular/material/table\";\nimport { RiskComponent } from './risk/risk.component';\nimport {MatSortModule} from \"@angular/material/sort\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    NewRoadRailCrossingComponent,\n    FooterComponent,\n    RiskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatSortModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <div class=\"container\">\n        <div class=\"row vcenter\">\n            <div class=\"pull-left col-lg-6 col-xs-12\">\n                <p><b>Copyright &copy;2022 by Pamela Ercegovac and Marko Ercegovac</b></p>\n            </div>\n            <div class=\"col-lg-4 col-lg-offset-4 col-xs-12\">\n                <div class=\"pull-right\">\n                    <a href=\"https://www.linkedin.com/in/marko-ercegovac-2a81bb18b/\"><i class=\"fa fa-linkedin-square fa-icon\"></i> </a>\n                    <a href=\"https://github.com/markoercegovac\"><i class=\"fa fa-github-square fa-icon\"></i></a>\n                </div>\n            </div>\n        </div>\n    </div>\n</footer>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  public isHome;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  newLevelCrossing() {\n    this.isHome = false;\n    this.router.navigate(['/new-road-rail-crossing']);\n  }\n\n  home() {\n    this.isHome = true;\n    this.router.navigate(['']);\n  }\n\n  showRiskPage() {\n      this.isHome = false;\n      this.router.navigate(['/risk']);\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<nav class=\"navbar navbar-expand-lg navbar-light\">\n\n    <a class=\"navbar-brand\">\n        <h2><i class=\"fa-solid fa-train\"><i class=\"fa-solid fa-car-crash\"></i></i>Rizik od pojave nesreće/nezgode na putno-pružnim prelazima</h2>\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" (click)=\"home()\"><b>Početna stranica</b></a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" (click)=\"newLevelCrossing()\"><b>Novi putno-pružni prelaz</b></a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" (click)=\"showRiskPage()\"><b>Rangiranje</b> (<b class=\"text-danger\">rizik</b>/<b class=\"text-success\">pouzdanost</b>)</a>\n            </li>\n        </ul>\n    </div>\n</nav>\n<div class=\"image\" *ngIf=\"isHome\">\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {RoadRailCrossing} from \"../model/road-rail-crossing\";\nimport {Form, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {from} from \"rxjs\";\nimport {RoadRailCrossingService} from \"../services/road-rail-crossing-service\";\n\n\n@Component({\n  selector: 'app-new-road-rail-crossing',\n  templateUrl: './new-road-rail-crossing.component.html',\n  styleUrls: ['./new-road-rail-crossing.component.css']\n})\nexport class NewRoadRailCrossingComponent implements OnInit {\n\n  newForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private service: RoadRailCrossingService) { }\n\n  ngOnInit(): void {\n    this.newForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      railName: ['', Validators.required],\n      roadName: ['', Validators.required],\n      safetyLevel: ['', Validators.required],\n      vehiclePerDay: [0, Validators.min(0)],\n      trainPerDay: [0, Validators.min(0)],\n      mediumLengthOfVehicle: [0, Validators.min(0)],\n      criticalDistanceLengthOfVehicle: [0, Validators.min(0)],\n      mediumVelocityOfVehicle: [0, Validators.min(0)],\n      mediumLengthOfTrain: [0, Validators.min(0)],\n      criticalDistanceLengthOfTrain: [0, Validators.min(0)],\n      mediumVelocityOfTrain: [0, Validators.min(0)],\n      numberOfYearsOfAccidents: [0, Validators.min(0)],\n      totalNumberOfAccidents: [0, Validators.min(0)]\n    });\n  }\n\n  createNewRoadRailCrossing(form: FormGroup) {\n    if(form.valid){\n      let newRoadRailCrossing = {\n        name: form.value.name,\n        railName: form.value.railName,\n        roadName: form.value.roadName,\n        safetyLevel: form.value.safetyLevel,\n        vehiclePerDay: form.value.vehiclePerDay,\n        trainPerDay: form.value.trainPerDay,\n        mediumLengthOfVehicle: form.value.mediumLengthOfVehicle,\n        criticalDistanceLengthOfVehicle: form.value.criticalDistanceLengthOfVehicle,\n        mediumVelocityOfVehicle: form.value.mediumVelocityOfVehicle,\n        mediumLengthOfTrain: form.value.mediumLengthOfTrain,\n        criticalDistanceLengthOfTrain: form.value.criticalDistanceLengthOfTrain,\n        mediumVelocityOfTrain: form.value.mediumVelocityOfTrain,\n        numberOfYearsOfAccidents: form.value.numberOfYearsOfAccidents,\n        totalNumberOfAccidents: form.value.totalNumberOfAccidents\n      };\n      this.service.save(newRoadRailCrossing).subscribe();\n    }\n  }\n\n  get f() { return this.newForm.controls; }\n}\n","<div class=\"w3-main\" >\n    <div class=\"row\">\n        <div class=\"offset-3\"></div>\n        <div class=\"col-md-6\">\n            <form [formGroup]=\"newForm\"  (ngSubmit)=\"createNewRoadRailCrossing(newForm)\" >\n                <div>\n                    <h4><b>Putno-pružni prelaz </b>\n                        <i class=\"fa fa-road\"></i></h4>\n                </div>\n                <br>\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Naziv/ime putno-pružnog prelaza.</label>\n                    <textarea sanitaze class=\"form-control\" formControlName=\"name\"></textarea>\n                    <small *ngIf=\"f.name.errors\" class=\"text-danger\">Naziv/ime putno-pružnog prelaza je obavezno</small>\n                </div>\n                <br>\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Naziv pruge na kojoj se putno-pružni prelaz nalazi sa kilometarskim položajem.</label>\n                    <textarea class=\"form-control\" formControlName=\"railName\"></textarea>\n                    <small *ngIf=\"f.railName.errors\" class=\"text-danger\">Naziv/ime putno-pružnog prelaza je obavezno</small>\n                </div>\n                <br>\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Naziv drumske saobraćajnice/puta na kojem se putno-pružni prelaz nalazi.</label>\n                    <textarea class=\"form-control\" formControlName=\"roadName\"></textarea>\n                    <small *ngIf=\"f.roadName.errors\" class=\"text-danger\">Naziv drumske saobraćajnice/puta na kojem se putno-pružni prelaz nalazi je obavezno</small>\n                </div>\n                <br>\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Nivo obezbeđenja putno-pružnog prelaza, shodno odredbama Pravilnika o načinu ukrštanja železničke pruge i puta, pešačke ili biciklističke staze, mestu na kojem se može izvesti ukrštanje i merama za osiguranje bezbednog saobraćaja (<b>,,Službeni glasnik RS”, br. 89/2016</b>).</label>\n                    <textarea  class=\"form-control\" formControlName=\"safetyLevel\"></textarea>\n                    <small *ngIf=\"f.safetyLevel.errors\" class=\"text-danger\">Nivo obezbeđenja putno-pružnog prelaza</small>\n                </div>\n                <br>\n                <hr>\n                <div>\n                    <h4><b>Statistički podaci </b>\n                        <i class=\"fa-solid fa-chart-line\"></i></h4>\n                </div>\n                <br>\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Prosečan dnevni intenzitet tokova drumskih vozila (drumskih vozila/dan), <i><b>λc</b></i>.</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"vehiclePerDay\">\n                    <small *ngIf=\"f.vehiclePerDay.errors\" class=\"text-danger\">Prosečan dnevni intenzitet tokova drumskih vozila ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Prosečan dnevni intenzitet tokova železničkih vozila (vozova/dan), <i><b>λt</b></i>.</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"trainPerDay\">\n                    <small *ngIf=\"f.trainPerDay.errors\" class=\"text-danger\">Prosečan dnevni intenzitet tokova železničkih vozila ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Srednja dužina drumskih vozila <i><b>lc</b></i> (<b>m</b>).</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"mediumLengthOfVehicle\">\n                    <small *ngIf=\"f.mediumLengthOfVehicle.errors\" class=\"text-danger\">Srednja dužina drumskih vozila ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Dužina kritičnog rastojanja za drumska vozila, koja je jednaka prosečnoj čeonoj širini voza <i><b>Lc</b></i> (<b>m</b>).</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"criticalDistanceLengthOfVehicle\">\n                    <small *ngIf=\"f.criticalDistanceLengthOfVehicle.errors\" class=\"text-danger\">Dužina kritičnog rastojanja za drumska vozila ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Srednja brzina <i><b>vc</b></i> (<b>km/h</b>)  kretanja drumskih vozila preko kritičnog puta <i><b>lc+Lc</b></i>.</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"mediumVelocityOfVehicle\">\n                    <small *ngIf=\"f.mediumVelocityOfVehicle.errors\" class=\"text-danger\">Srednja brzina kretanja drumskih vozila  preko kritičnog puta ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Dužina kritičnog rastojanja, koja je jednaka prosečnoj dužini vozova <i><b>lt</b></i> (<b>m</b>).</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"mediumLengthOfTrain\">\n                    <small *ngIf=\"f.mediumLengthOfTrain.errors\" class=\"text-danger\">Dužina kritičnog rastojanja ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Dužina kritičnog rastojanja za železnička vozila, koja je jednaka širini putno-pružnog prelaza <i><b>Lt</b></i> (<b>m</b>).</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"criticalDistanceLengthOfTrain\">\n                    <small *ngIf=\"f.criticalDistanceLengthOfTrain.errors\" class=\"text-danger\">Dužina kritičnog rastojanja za železnička vozila ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Srednja brzina <i><b>vc</b></i> (<b>km/h</b>)  kretanja železničkog vozila preko kritičnog puta <i><b>lt+Lt</b></i>.</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"mediumVelocityOfTrain\">\n                    <small *ngIf=\"f.mediumVelocityOfTrain.errors\" class=\"text-danger\">Srednja brzina  kretanja železničkog vozila preko kritičnog puta ne sme biti negativan broj</small>\n                </div>\n                <br>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Broj godina za koji posmatramo nesreće nezgode (<b>T</b>).</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"numberOfYearsOfAccidents\">\n                    <small *ngIf=\"f.numberOfYearsOfAccidents.errors\" class=\"text-danger\">Broj godina za koji posmatramo nesreće nezgode ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Ukupan broj nesreća/nezgoda u posmatranom broju godina (<i><b>nreal</b></i>).</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"totalNumberOfAccidents\">\n                    <small *ngIf=\"f.totalNumberOfAccidents.errors\" class=\"text-danger\">Ukupan broj nesreća/nezgoda u posmatranom broju godina ne sme biti negativan broj</small>\n                </div>\n\n\n                <hr>\n\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <input type=\"submit\" class=\"btn btn-primary float-right\" value=\"Napravi novi putno-pružni prelaz\" />\n                </div>\n\n            </form>\n        </div>\n    </div>\n</div>\n<br>\n<br>\n<br>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {RiskService} from \"../services/risk-service\";\nimport {Risk} from \"../model/risk\";\nimport {MatSort, Sort} from \"@angular/material/sort\";\nimport {LiveAnnouncer} from \"@angular/cdk/a11y\";\nimport {MatTableDataSource} from \"@angular/material/table\";\n\n@Component({\n  selector: 'app-risk',\n  templateUrl: './risk.component.html',\n  styleUrls: ['./risk.component.css']\n})\nexport class RiskComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'safetyLevel','reliability','risk'];\n  allRiskData: any;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private riskService: RiskService, private _liveAnnouncer: LiveAnnouncer) { }\n\n  ngOnInit(): void {\n    this.renderTable();\n\n  }\n\n  private renderTable() {\n    this.riskService.getAllRiskData().subscribe(\n        data=>{\n          this.allRiskData = new MatTableDataSource(data);\n          this.allRiskData.sort = this.sort;\n        }\n\n    );\n  }\n\n  announceSortChange(sortState: Sort) {\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n}\n","<table mat-table [dataSource]=\"allRiskData\"  matSort class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Naziv pružnog prelaza</th>\n        <td mat-cell *matCellDef=\"let data\">{{data.name}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"safetyLevel\">\n        <th mat-header-cell *matHeaderCellDef >Nivo obezbeđenja putno-pružnog prelaza</th>\n        <td mat-cell *matCellDef=\"let data\">{{data.safetyLevel}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"reliability\">\n        <th mat-header-cell *matHeaderCellDef>Pouzdanost</th>\n        <td mat-cell *matCellDef=\"let data\">{{data.reliability}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"risk\">\n        <th mat-header-cell mat-sort-header  *matHeaderCellDef class=\"text-danger text-lg-right\">Rizik</th>\n        <td mat-cell *matCellDef=\"let data\" class=\"text-danger text-lg-right\" >{{data.risk}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n<br>\n<br>\n<br>\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Risk} from \"../model/risk\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\n\r\nconst URL = environment.risk;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class RiskService {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    public getAllRiskData(): Observable<Risk[]> {\r\n        return this.http.get<Risk[]>(URL + '/all');\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {RoadRailCrossing} from \"../model/road-rail-crossing\";\r\nimport {environment} from \"../../environments/environment\";\r\n\r\nconst URL = environment.road_rail_crossing;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class RoadRailCrossingService {\r\n\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    public save(roadRailCrossing: RoadRailCrossing){\r\n        return this.http.post(URL + '/save',roadRailCrossing);\r\n    }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  risk : 'http://localhost:9090/api/risk',\n  road_rail_crossing : 'http://localhost:9090/api/road-rail-crossing'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}