{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/navigation/navigation.component.ts","webpack:///src/app/navigation/navigation.component.html","webpack:///src/app/new-road-rail-crossing/new-road-rail-crossing.component.ts","webpack:///src/app/new-road-rail-crossing/new-road-rail-crossing.component.html","webpack:///src/app/risk/risk.component.ts","webpack:///src/app/risk/risk.component.html","webpack:///src/app/services/risk-service.ts","webpack:///src/app/services/road-rail-crossing-service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","FooterComponent","NavigationComponent","router","isHome","navigate","home","newLevelCrossing","showRiskPage","NewRoadRailCrossingComponent","formBuilder","service","newForm","group","name","required","railName","roadName","safetyLevel","vehiclePerDay","min","trainPerDay","mediumLengthOfVehicle","criticalDistanceLengthOfVehicle","mediumVelocityOfVehicle","mediumLengthOfTrain","criticalDistanceLengthOfTrain","mediumVelocityOfTrain","numberOfYearsOfAccidents","totalNumberOfAccidents","form","valid","newRoadRailCrossing","value","save","subscribe","controls","createNewRoadRailCrossing","RiskComponent","riskService","_liveAnnouncer","displayedColumns","renderTable","getAllRiskData","data","allRiskData","sort","sortState","direction","announce","URL","risk","RiskService","http","get","providedIn","road_rail_crossing","RoadRailCrossingService","roadRailCrossing","post","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {NewRoadRailCrossingComponent} from \"./new-road-rail-crossing/new-road-rail-crossing.component\";\nimport {RiskComponent} from \"./risk/risk.component\";\n\n\nconst routes: Routes = [\n  {path: 'new-road-rail-crossing', component: NewRoadRailCrossingComponent},\n  {path: 'risk',component:RiskComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'road-rail-crossing-ng';\n}\n","<div class=\"container-fluid\">\n    <app-navigation></app-navigation>\n    <router-outlet></router-outlet>\n    <app-footer></app-footer>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { NewRoadRailCrossingComponent } from './new-road-rail-crossing/new-road-rail-crossing.component';\nimport { FooterComponent } from './footer/footer.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatTableModule} from \"@angular/material/table\";\nimport { RiskComponent } from './risk/risk.component';\nimport {MatSortModule} from \"@angular/material/sort\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    NewRoadRailCrossingComponent,\n    FooterComponent,\n    RiskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatSortModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <div class=\"container\">\n        <div class=\"row vcenter\">\n            <div class=\"pull-left col-lg-6 col-xs-12\">\n                <p><b>Copyright &copy;2022 by Pamela Ercegovac and Marko Ercegovac</b></p>\n            </div>\n            <div class=\"col-lg-4 col-lg-offset-4 col-xs-12\">\n                <div class=\"pull-right\">\n                    <a href=\"https://www.linkedin.com/in/marko-ercegovac-2a81bb18b/\"><i class=\"fa fa-linkedin-square fa-icon\"></i> </a>\n                    <a href=\"https://github.com/markoercegovac\"><i class=\"fa fa-github-square fa-icon\"></i></a>\n                </div>\n            </div>\n        </div>\n    </div>\n</footer>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  public isHome;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  newLevelCrossing() {\n    this.isHome = false;\n    this.router.navigate(['/new-road-rail-crossing']);\n  }\n\n  home() {\n    this.isHome = true;\n    this.router.navigate(['']);\n  }\n\n  showRiskPage() {\n      this.isHome = false;\n      this.router.navigate(['/risk']);\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<nav class=\"navbar navbar-expand-lg navbar-light\">\n\n    <a class=\"navbar-brand\">\n        <h2><i class=\"fa-solid fa-train\"><i class=\"fa-solid fa-car-crash\"></i></i>Rizik od pojave nesreće/nezgode na putno-pružnim prelazima</h2>\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" (click)=\"home()\"><b>Početna stranica</b></a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" (click)=\"newLevelCrossing()\"><b>Novi putno-pružni prelaz</b></a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" (click)=\"showRiskPage()\"><b>Rangiranje</b> (<b class=\"text-danger\">rizik</b>/<b class=\"text-success\">pouzdanost</b>)</a>\n            </li>\n        </ul>\n    </div>\n</nav>\n<div class=\"image\" *ngIf=\"isHome\">\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {RoadRailCrossing} from \"../model/road-rail-crossing\";\nimport {Form, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {from} from \"rxjs\";\nimport {RoadRailCrossingService} from \"../services/road-rail-crossing-service\";\n\n\n@Component({\n  selector: 'app-new-road-rail-crossing',\n  templateUrl: './new-road-rail-crossing.component.html',\n  styleUrls: ['./new-road-rail-crossing.component.css']\n})\nexport class NewRoadRailCrossingComponent implements OnInit {\n\n  newForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private service: RoadRailCrossingService) { }\n\n  ngOnInit(): void {\n    this.newForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      railName: ['', Validators.required],\n      roadName: ['', Validators.required],\n      safetyLevel: ['', Validators.required],\n      vehiclePerDay: [0, Validators.min(0)],\n      trainPerDay: [0, Validators.min(0)],\n      mediumLengthOfVehicle: [0, Validators.min(0)],\n      criticalDistanceLengthOfVehicle: [0, Validators.min(0)],\n      mediumVelocityOfVehicle: [0, Validators.min(0)],\n      mediumLengthOfTrain: [0, Validators.min(0)],\n      criticalDistanceLengthOfTrain: [0, Validators.min(0)],\n      mediumVelocityOfTrain: [0, Validators.min(0)],\n      numberOfYearsOfAccidents: [0, Validators.min(0)],\n      totalNumberOfAccidents: [0, Validators.min(0)]\n    });\n  }\n\n  createNewRoadRailCrossing(form: FormGroup) {\n    if(form.valid){\n      let newRoadRailCrossing = {\n        name: form.value.name,\n        railName: form.value.railName,\n        roadName: form.value.roadName,\n        safetyLevel: form.value.safetyLevel,\n        vehiclePerDay: form.value.vehiclePerDay,\n        trainPerDay: form.value.trainPerDay,\n        mediumLengthOfVehicle: form.value.mediumLengthOfVehicle,\n        criticalDistanceLengthOfVehicle: form.value.criticalDistanceLengthOfVehicle,\n        mediumVelocityOfVehicle: form.value.mediumVelocityOfVehicle,\n        mediumLengthOfTrain: form.value.mediumLengthOfTrain,\n        criticalDistanceLengthOfTrain: form.value.criticalDistanceLengthOfTrain,\n        mediumVelocityOfTrain: form.value.mediumVelocityOfTrain,\n        numberOfYearsOfAccidents: form.value.numberOfYearsOfAccidents,\n        totalNumberOfAccidents: form.value.totalNumberOfAccidents\n      };\n      this.service.save(newRoadRailCrossing).subscribe();\n    }\n  }\n\n  get f() { return this.newForm.controls; }\n}\n","<div class=\"w3-main\" >\n    <div class=\"row\">\n        <div class=\"offset-3\"></div>\n        <div class=\"col-md-6\">\n            <form [formGroup]=\"newForm\"  (ngSubmit)=\"createNewRoadRailCrossing(newForm)\" >\n                <div>\n                    <h4><b>Putno-pružni prelaz </b>\n                        <i class=\"fa fa-road\"></i></h4>\n                </div>\n                <br>\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Naziv/ime putno-pružnog prelaza.</label>\n                    <textarea sanitaze class=\"form-control\" formControlName=\"name\"></textarea>\n                    <small *ngIf=\"f.name.errors\" class=\"text-danger\">Naziv/ime putno-pružnog prelaza je obavezno</small>\n                </div>\n                <br>\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Naziv pruge na kojoj se putno-pružni prelaz nalazi sa kilometarskim položajem.</label>\n                    <textarea class=\"form-control\" formControlName=\"railName\"></textarea>\n                    <small *ngIf=\"f.railName.errors\" class=\"text-danger\">Naziv/ime putno-pružnog prelaza je obavezno</small>\n                </div>\n                <br>\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Naziv drumske saobraćajnice/puta na kojem se putno-pružni prelaz nalazi.</label>\n                    <textarea class=\"form-control\" formControlName=\"roadName\"></textarea>\n                    <small *ngIf=\"f.roadName.errors\" class=\"text-danger\">Naziv drumske saobraćajnice/puta na kojem se putno-pružni prelaz nalazi je obavezno</small>\n                </div>\n                <br>\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Nivo obezbeđenja putno-pružnog prelaza, shodno odredbama Pravilnika o načinu ukrštanja železničke pruge i puta, pešačke ili biciklističke staze, mestu na kojem se može izvesti ukrštanje i merama za osiguranje bezbednog saobraćaja (<b>,,Službeni glasnik RS”, br. 89/2016</b>).</label>\n                    <textarea  class=\"form-control\" formControlName=\"safetyLevel\"></textarea>\n                    <small *ngIf=\"f.safetyLevel.errors\" class=\"text-danger\">Nivo obezbeđenja putno-pružnog prelaza</small>\n                </div>\n                <br>\n                <hr>\n                <div>\n                    <h4><b>Statistički podaci </b>\n                        <i class=\"fa-solid fa-chart-line\"></i></h4>\n                </div>\n                <br>\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Prosečan dnevni intenzitet tokova drumskih vozila (drumskih vozila/dan), <i><b>λc</b></i>.</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"vehiclePerDay\">\n                    <small *ngIf=\"f.vehiclePerDay.errors\" class=\"text-danger\">Prosečan dnevni intenzitet tokova drumskih vozila ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Prosečan dnevni intenzitet tokova železničkih vozila (vozova/dan), <i><b>λt</b></i>.</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"trainPerDay\">\n                    <small *ngIf=\"f.trainPerDay.errors\" class=\"text-danger\">Prosečan dnevni intenzitet tokova železničkih vozila ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Srednja dužina drumskih vozila <i><b>lc</b></i> (<b>m</b>).</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"mediumLengthOfVehicle\">\n                    <small *ngIf=\"f.mediumLengthOfVehicle.errors\" class=\"text-danger\">Srednja dužina drumskih vozila ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Dužina kritičnog rastojanja za drumska vozila, koja je jednaka prosečnoj čeonoj širini voza <i><b>Lc</b></i> (<b>m</b>).</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"criticalDistanceLengthOfVehicle\">\n                    <small *ngIf=\"f.criticalDistanceLengthOfVehicle.errors\" class=\"text-danger\">Dužina kritičnog rastojanja za drumska vozila ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Srednja brzina <i><b>vc</b></i> (<b>km/h</b>)  kretanja drumskih vozila preko kritičnog puta <i><b>lc+Lc</b></i>.</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"mediumVelocityOfVehicle\">\n                    <small *ngIf=\"f.mediumVelocityOfVehicle.errors\" class=\"text-danger\">Srednja brzina kretanja drumskih vozila  preko kritičnog puta ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Dužina kritičnog rastojanja, koja je jednaka prosečnoj dužini vozova <i><b>lt</b></i> (<b>m</b>).</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"mediumLengthOfTrain\">\n                    <small *ngIf=\"f.mediumLengthOfTrain.errors\" class=\"text-danger\">Dužina kritičnog rastojanja ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Dužina kritičnog rastojanja za železnička vozila, koja je jednaka širini putno-pružnog prelaza <i><b>Lt</b></i> (<b>m</b>).</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"criticalDistanceLengthOfTrain\">\n                    <small *ngIf=\"f.criticalDistanceLengthOfTrain.errors\" class=\"text-danger\">Dužina kritičnog rastojanja za železnička vozila ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Srednja brzina <i><b>vc</b></i> (<b>km/h</b>)  kretanja železničkog vozila preko kritičnog puta <i><b>lt+Lt</b></i>.</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"mediumVelocityOfTrain\">\n                    <small *ngIf=\"f.mediumVelocityOfTrain.errors\" class=\"text-danger\">Srednja brzina  kretanja železničkog vozila preko kritičnog puta ne sme biti negativan broj</small>\n                </div>\n                <br>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Broj godina za koji posmatramo nesreće nezgode (<b>T</b>).</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"numberOfYearsOfAccidents\">\n                    <small *ngIf=\"f.numberOfYearsOfAccidents.errors\" class=\"text-danger\">Broj godina za koji posmatramo nesreće nezgode ne sme biti negativan broj</small>\n                </div>\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <label>Ukupan broj nesreća/nezgoda u posmatranom broju godina (<i><b>nreal</b></i>).</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"totalNumberOfAccidents\">\n                    <small *ngIf=\"f.totalNumberOfAccidents.errors\" class=\"text-danger\">Ukupan broj nesreća/nezgoda u posmatranom broju godina ne sme biti negativan broj</small>\n                </div>\n\n\n                <hr>\n\n\n                <div class=\"form-group\" style=\"margin-top:20px;\">\n                    <input type=\"submit\" class=\"btn btn-primary float-right\" value=\"Napravi novi putno-pružni prelaz\" />\n                </div>\n\n            </form>\n        </div>\n    </div>\n</div>\n<br>\n<br>\n<br>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {RiskService} from \"../services/risk-service\";\nimport {Risk} from \"../model/risk\";\nimport {MatSort, Sort} from \"@angular/material/sort\";\nimport {LiveAnnouncer} from \"@angular/cdk/a11y\";\nimport {MatTableDataSource} from \"@angular/material/table\";\n\n@Component({\n  selector: 'app-risk',\n  templateUrl: './risk.component.html',\n  styleUrls: ['./risk.component.css']\n})\nexport class RiskComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'safetyLevel','reliability','risk'];\n  allRiskData: any;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private riskService: RiskService, private _liveAnnouncer: LiveAnnouncer) { }\n\n  ngOnInit(): void {\n    this.renderTable();\n\n  }\n\n  private renderTable() {\n    this.riskService.getAllRiskData().subscribe(\n        data=>{\n          this.allRiskData = new MatTableDataSource(data);\n          this.allRiskData.sort = this.sort;\n        }\n\n    );\n  }\n\n  announceSortChange(sortState: Sort) {\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n}\n","<table mat-table [dataSource]=\"allRiskData\"  matSort class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Naziv pružnog prelaza</th>\n        <td mat-cell *matCellDef=\"let data\">{{data.name}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"safetyLevel\">\n        <th mat-header-cell *matHeaderCellDef >Nivo obezbeđenja putno-pružnog prelaza</th>\n        <td mat-cell *matCellDef=\"let data\">{{data.safetyLevel}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"reliability\">\n        <th mat-header-cell *matHeaderCellDef>Pouzdanost</th>\n        <td mat-cell *matCellDef=\"let data\">{{data.reliability}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"risk\">\n        <th mat-header-cell mat-sort-header  *matHeaderCellDef class=\"text-danger text-lg-right\">Rizik</th>\n        <td mat-cell *matCellDef=\"let data\" class=\"text-danger text-lg-right\" >{{data.risk}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n<br>\n<br>\n<br>\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Risk} from \"../model/risk\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\n\r\nconst URL = environment.risk;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class RiskService {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    public getAllRiskData(): Observable<Risk[]> {\r\n        return this.http.get<Risk[]>(URL + '/all');\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {RoadRailCrossing} from \"../model/road-rail-crossing\";\r\nimport {environment} from \"../../environments/environment\";\r\n\r\nconst URL = environment.road_rail_crossing;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class RoadRailCrossingService {\r\n\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    public save(roadRailCrossing: RoadRailCrossing){\r\n        return this.http.post(URL + '/save',roadRailCrossing);\r\n    }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  risk : 'http://localhost:9090/api/risk',\n  road_rail_crossing : 'http://localhost:9090/api/road-rail-crossing'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}